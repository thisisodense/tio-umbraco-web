@using TIO.Core.Models;
@using TIO.Mvc.Core;
@using Const = TIO.Core.Models;
@using Library.Tools;

@inherits BaseViewPage<LocationModel>

@helper GetWriterName()
{
    <span>| @Umbraco.GetDictionaryValue("Skrevet af:") <a href="@Url.Action(Const.Constants.Controllers.Writer.Actions.WRITER, Const.Constants.Controllers.Writer.NAME, new { id = Model.WriterId, name = Model.WriterName.ToSeoUrl() })">@Model.WriterName</a></span>
}

@helper GetTranslatorName()
{
    bool isEnglish = Request.RawUrl.IndexOf("/en/", StringComparison.InvariantCultureIgnoreCase) > -1;
    if (!Model.IsDetails && Model.TranslatorId > 0 && isEnglish)
    {
        <span>| @Umbraco.GetDictionaryValue("Oversat af"): <a href="@Url.Action(Const.Constants.Controllers.Writer.Actions.WRITER, Const.Constants.Controllers.Writer.NAME, new { id = Model.TranslatorId, name = Model.TranslatorName.ToSeoUrl() })">@Model.TranslatorName</a></span>
    }
}


@helper GetFotografName()
{
    if (string.IsNullOrEmpty(Model.Fotograf) == false && string.IsNullOrEmpty(Model.FotografURL) == false)
    {
        <span>| Photo: <a href="@Model.FotografURL">@Model.Fotograf</a></span> 
    }
}

@if (Model.ShowAsSimple && Model.IsDetails)
{
    <article class="place" data-title="@Model.Title" data-geo="@Model.GeoLocation.Replace(',','.')" data-icon="@Model.Categories.FirstOrDefault()">
        <input type="hidden" value="@Model.IsDetails" id="isDetails" />
        <div class="toggleShow">
            <div class="placeHeader">
                <div class="addthis_sharing_toolbox"
                     data-title="@Model.Title"
                     data-media="@(Request.Url.Scheme + System.Uri.SchemeDelimiter + Request.Url.Host + (Request.Url.IsDefaultPort ? "" : ":" + Request.Url.Port) + Model.Image)"
                     data-url="@Url.Action(Const.Constants.Controllers.Location.NAME,
                                    Const.Constants.Controllers.Location.Actions.LOCATION,
                                    new
                                    {
                                    id = Model.Id,
                                    name = Model.Title.ToSeoUrl()
                                    },
                                    Request.Url.Scheme)"
                     addthis:url="@Url.Action(Const.Constants.Controllers.Location.NAME,
                                    Const.Constants.Controllers.Location.Actions.LOCATION,
                                    new
                                    {
                                    id = Model.Id,
                                    name = Model.Title.ToSeoUrl()
                                    },
                                    Request.Url.Scheme)"
                    addthis:title="@Model.Title"
                    addthis:description="@Model.ShortDescription">
                </div>
                <div class="desc simple">
                    <p>
                        <strong class="hed">@Model.Title</strong>
                    </p>
                </div>
            </div>
            <div class="map" style="width: 100%; height: 200px"></div>
            <div class="placeInfo">
                <div class="info arrow">
                    @Umbraco.GetDictionaryValue(string.Join(",", Model.Categories))
                    | @Model.Address
                    @GetFotografName()
                    <a href="@Url.Action(Const.Constants.Controllers.LocationArchive.Actions.LOCATION_ARCHIVE,
                                         Const.Constants.Controllers.LocationArchive.NAME,
                                         new { id = Model.Id, name = Model.Title.ToSeoUrl() })">@(Model.TimesRecommended > 0 ? " | " + Model.TimesRecommended + " " + Umbraco.GetDictionaryValue("Recommended") : "")</a>
                </div> 
            </div>
        </div>
    </article>
}
else
{
    <article class="place" data-title="@Model.Title" data-geo="@Model.GeoLocation.Replace(',','.')" data-icon="@Model.Categories.FirstOrDefault()">
        <input type="hidden" value="@Model.IsDetails" id="isDetails" />
        <div class="toggleShow">
            <div class="placeHeader">
                <div class="addthis_sharing_toolbox"
                     data-media="@(Request.Url.Scheme + System.Uri.SchemeDelimiter + Request.Url.Host + (Request.Url.IsDefaultPort ? "" : ":" + Request.Url.Port) + Model.Image)"
                     data-url="@Url.Action(Const.Constants.Controllers.Location.NAME,
                                    Const.Constants.Controllers.Location.Actions.LOCATION,
                                    new
                                    {
                                    id = Model.Id,
                                    name = Model.Title.ToSeoUrl()
                                    },
                                    Request.Url.Scheme)"
                     addthis:url="@Url.Action(Const.Constants.Controllers.Location.NAME,
                                         Const.Constants.Controllers.Location.Actions.LOCATION,
                                         new
                                         {
                                           id = Model.Id,
                                           name = Model.Title.ToSeoUrl()
                                         },
                                         Request.Url.Scheme)"
                           addthis:title="@Model.Title"
                           addthis:description="@Model.ShortDescription"></div>
                <div data-test="@string.Join(",", @Model.Categories)" class="mapCategory @Model.Categories.FirstOrDefault()"><i class="fa"></i></div>
                <div class="desc">
                    <p>
                        <strong class="hed">@Model.Title</strong>
                        <span class="des">@Model.ShortDescription</span>
                    </p>
                </div>
            </div>
            <img class="articleImg" src="@Model.Image" alt="@Model.Title" />
            <div class="placeInfo">
                <div class="info arrow">
                    @Umbraco.GetDictionaryValue(string.Join(",", Model.Categories))
                    | @Model.Address
                    @GetWriterName()
                    @GetTranslatorName()
                    @GetFotografName()
                    <a href="@Url.Action(Const.Constants.Controllers.LocationArchive.Actions.LOCATION_ARCHIVE,
                                         Const.Constants.Controllers.LocationArchive.NAME,
                                         new { id = Model.Id, name = Model.Title.ToSeoUrl() })">@(Model.TimesRecommended > 0 ? " | " + Model.TimesRecommended + " " + Umbraco.GetDictionaryValue("Recommended") : "")</a>
                </div>
                @if (Model.IsDetails == false)
                {
                    <div class="readmore">
                        <a href="javascript:void(0)" class="readmorelink">@Umbraco.GetDictionaryValue("Læs mere")</a>
                    </div>
                    <br style="clear:both" />
                }
            </div>
        </div>

        <div class="readmore @(Model.IsDetails ? "" : "hide")">
            @Html.Raw(Model.LongDescription)

            @if(Model.SimpleOpeningHours.Count() > 0)
            {
                <ul class="openingHours">
                    @foreach(var openingHour in Model.SimpleOpeningHours)
                    {
                        <li><span class="day">@openingHour.Key: </span><span class="time">@openingHour.Value</span></li>
                    }
                </ul>
            }

            <a href="@Model.Url" class="left" target="_blank">@Umbraco.GetDictionaryValue("Link til sted")</a>
            <a href='@("http://maps.google.com/maps?f=d&daddr=" + @Model.Address + "&zoom=13")' class="right" target="_blank">@Umbraco.GetDictionaryValue("Find vej")</a>
            <br style="clear:both" />
            <div class="map" style="width: 100%; height: 200px"></div>
        </div>
        <br style="clear:both" />
    </article>
}

