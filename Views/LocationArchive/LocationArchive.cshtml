@using TIO.Core.Models;
@using TIO.Mvc.Core;
@using Const = TIO.Core.Models;
@using Library.Tools;
@using Library.Mvc.Extensions;

@inherits BaseViewPage<LocationArchiveModel>
@{
    Layout = "~/Views/Layout.cshtml";
    ViewBag.Title = " - " + Model.Name;
}

@{
    string newLangUrl = Url.Action(Html.GetRouteDataValue<string>
("action"),
Html.GetRouteDataValue<string>
    ("controller"),
    new
    {
        lang = (Site.IsEnglish ? "da" : "en"),
        id = Html.GetRouteDataValue<string>
        ("id")
    });

    string currentUrl = Request.RawUrl;
    if (currentUrl.IndexOf("/da/", StringComparison.InvariantCultureIgnoreCase) > -1)
    {
        newLangUrl = currentUrl.Replace("/da/", "/en/", StringComparison.InvariantCultureIgnoreCase);
    }
    else if (currentUrl.IndexOf("/en/", StringComparison.InvariantCultureIgnoreCase) > -1)
    {
        newLangUrl = currentUrl.Replace("/en/", "/da/", StringComparison.InvariantCultureIgnoreCase);
    }
}

@section topImage {
    <a class="logo" href="@Url.Action(Const.Constants.Controllers.Location.NAME,
                                    Const.Constants.Controllers.Location.Actions.LOCATION,
                                    new
                                    {
                                        id = Model.Id,
                                        name = Model.Name.ToSeoUrl()
                                    })">
        <img src="@Model.Image" alt="@Model.Name" title="@Model.Name" class="logowriter">
    </a>
    }

    <article class="writerArciveBackground">
        <div class="writerArciveBackground">
            @if (Model.Published)
            {
                @Html.Raw(Model.LongDescription.Substring(0, 200) + " ...")
                            }
            <a href="@Url.Action(Const.Constants.Controllers.Location.Actions.LOCATION,
                                 Const.Constants.Controllers.Location.NAME,
                                 new { id = Model.Id, name = Model.Name })" class="writerArciveBackground">
                <strong>@Model.Name</strong>
            </a>
        </div>
    </article>

    <div class="navigation">
        <a class="flag" href="@newLangUrl">
            <img src="@Url.Content("http://www.thisisodense.dk/media/" + (Site.IsEnglish ? "97947/dk" : "97948/en") + ".png")">
        </a>
        <ul class="topNavigation locationarchive">
            <li class="active">
                <a href="@Url.Action(Const.Constants.Controllers.LocationArchive.Actions.LOCATION_ARCHIVE,
                                    Const.Constants.Controllers.LocationArchive.NAME,
                                    new { id = Model.Id })">@Model.NumberOfRecommendations @Umbraco.GetDictionaryValue("recommendations")</a>
            </li>
        </ul>
        <br style="clear:both" />
    </div>
    <div style="float:right">
        @foreach (var recommendation in Model.Recommendations)
        {
            <article class="achive">
                <p class="achive">
                    <a href="@Url.Action(Const.Constants.Controllers.Recommendation.Actions.RECOMMENDATION,
                        Const.Constants.Controllers.Recommendation.NAME,
                        new { id = recommendation.Id })">
                        <img src="@recommendation.ImageUrl" class="achive">
                        <strong class="hed">@recommendation.HeadLine</strong>
                        <br>
                        <span class="des">@recommendation.SubHeader</span>
                    </a>
                </p>
            </article>
        }
    </div>
    <nav class="paging">
        @if (Model.DisablePreviousButton == false)
        {
            @Html.ActionLink(Umbraco.GetDictionaryValue("Forrige"),
            Const.Constants.Controllers.LocationArchive.Actions.LOCATION_ARCHIVE,
            Const.Constants.Controllers.LocationArchive.NAME,
            new { Page = Model.Page - 1 },
            new { @class = "previous"})
        }
        @if (Model.DisableNextButton == false)
        {
            @Html.ActionLink(Umbraco.GetDictionaryValue("Næste"),
            Const.Constants.Controllers.LocationArchive.Actions.LOCATION_ARCHIVE,
            Const.Constants.Controllers.LocationArchive.NAME,
            new { Page = Model.Page + 1 },
            new { @class = "next"})

        }

    </nav>




